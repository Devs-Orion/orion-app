{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Omar/Desktop/ORION/orion/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _AuthService;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(afAuth, router) {\n    this.afAuth = afAuth;\n    this.router = router;\n    this.afAuth.authState.subscribe(user => {\n      if (user) {\n        this.userData = user;\n        localStorage.setItem('user', JSON.stringify(this.userData));\n      } else {\n        localStorage.removeItem('user');\n      }\n    });\n  }\n  // Iniciar sesión con correo y contraseña\n  signIn(email, password) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const result = yield _this.afAuth.signInWithEmailAndPassword(email, password);\n        _this.userData = result.user;\n        localStorage.setItem('user', JSON.stringify(_this.userData));\n        // Retorna éxito, pero no navega automáticamente\n      } catch (error) {\n        throw error; // Propaga el error para que el componente lo maneje\n      }\n    })();\n  }\n  // Cerrar sesión\n  signOut() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      yield _this2.afAuth.signOut();\n      localStorage.removeItem('user');\n      _this2.router.navigate(['login']);\n    })();\n  }\n  // Comprobar si el usuario está logueado\n  get isLoggedIn() {\n    const user = localStorage.getItem('user');\n    return user !== null;\n  }\n}\n_AuthService = AuthService;\n_AuthService.ɵfac = function AuthService_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || _AuthService)(i0.ɵɵinject(i1.AngularFireAuth), i0.ɵɵinject(i2.Router));\n};\n_AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _AuthService,\n  factory: _AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthService","constructor","afAuth","router","authState","subscribe","user","userData","localStorage","setItem","JSON","stringify","removeItem","signIn","email","password","_this","_asyncToGenerator","result","signInWithEmailAndPassword","error","signOut","_this2","navigate","isLoggedIn","getItem","i0","ɵɵinject","i1","AngularFireAuth","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Omar\\Desktop\\ORION\\orion\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  userData: any; // Guarda los datos del usuario logueado\r\n\r\n  constructor(\r\n    private afAuth: AngularFireAuth,\r\n    private router: Router\r\n  ) {\r\n    this.afAuth.authState.subscribe((user) => {\r\n      if (user) {\r\n        this.userData = user;\r\n        localStorage.setItem('user', JSON.stringify(this.userData));\r\n      } else {\r\n        localStorage.removeItem('user');\r\n      }\r\n    });\r\n  }\r\n\r\n  // Iniciar sesión con correo y contraseña\r\n  async signIn(email: string, password: string): Promise<void> {\r\n    try {\r\n      const result = await this.afAuth.signInWithEmailAndPassword(email, password);\r\n      this.userData = result.user;\r\n      localStorage.setItem('user', JSON.stringify(this.userData));\r\n      // Retorna éxito, pero no navega automáticamente\r\n    } catch (error) {\r\n      throw error; // Propaga el error para que el componente lo maneje\r\n    }\r\n  }\r\n\r\n  // Cerrar sesión\r\n  async signOut(): Promise<void> {\r\n    await this.afAuth.signOut();\r\n    localStorage.removeItem('user');\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n  // Comprobar si el usuario está logueado\r\n  get isLoggedIn(): boolean {\r\n    const user = localStorage.getItem('user');\r\n    return user !== null;\r\n  }\r\n}\r\n"],"mappings":";;;;;AAOA,OAAM,MAAOA,WAAW;EAGtBC,YACUC,MAAuB,EACvBC,MAAc;IADd,KAAAD,MAAM,GAANA,MAAM;IACN,KAAAC,MAAM,GAANA,MAAM;IAEd,IAAI,CAACD,MAAM,CAACE,SAAS,CAACC,SAAS,CAAEC,IAAI,IAAI;MACvC,IAAIA,IAAI,EAAE;QACR,IAAI,CAACC,QAAQ,GAAGD,IAAI;QACpBE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACJ,QAAQ,CAAC,CAAC;MAC7D,CAAC,MAAM;QACLC,YAAY,CAACI,UAAU,CAAC,MAAM,CAAC;MACjC;IACF,CAAC,CAAC;EACJ;EAEA;EACMC,MAAMA,CAACC,KAAa,EAAEC,QAAgB;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAC1C,IAAI;QACF,MAAMC,MAAM,SAASF,KAAI,CAACd,MAAM,CAACiB,0BAA0B,CAACL,KAAK,EAAEC,QAAQ,CAAC;QAC5EC,KAAI,CAACT,QAAQ,GAAGW,MAAM,CAACZ,IAAI;QAC3BE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACK,KAAI,CAACT,QAAQ,CAAC,CAAC;QAC3D;MACF,CAAC,CAAC,OAAOa,KAAK,EAAE;QACd,MAAMA,KAAK,CAAC,CAAC;MACf;IAAC;EACH;EAEA;EACMC,OAAOA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAL,iBAAA;MACX,MAAMK,MAAI,CAACpB,MAAM,CAACmB,OAAO,EAAE;MAC3Bb,YAAY,CAACI,UAAU,CAAC,MAAM,CAAC;MAC/BU,MAAI,CAACnB,MAAM,CAACoB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAAC;EAClC;EAEA;EACA,IAAIC,UAAUA,CAAA;IACZ,MAAMlB,IAAI,GAAGE,YAAY,CAACiB,OAAO,CAAC,MAAM,CAAC;IACzC,OAAOnB,IAAI,KAAK,IAAI;EACtB;;eAxCWN,WAAW;;mCAAXA,YAAW,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,eAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;SAAX/B,YAAW;EAAAgC,OAAA,EAAXhC,YAAW,CAAAiC,IAAA;EAAAC,UAAA,EAFV;AAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}