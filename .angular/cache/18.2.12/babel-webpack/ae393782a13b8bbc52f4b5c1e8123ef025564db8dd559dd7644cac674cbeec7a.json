{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Omar/Desktop/ORION/orion/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _LoginPage;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@ionic/angular\";\nexport class LoginPage {\n  constructor(authService) {\n    this.authService = authService;\n    this.email = ''; // Inicializamos como cadena vacía\n    this.password = '';\n  }\n  onSubmit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (!_this.email || !_this.password) {\n        alert('Please fill in both fields.');\n        return;\n      }\n      try {\n        yield _this.authService.signIn(_this.email, _this.password);\n        alert('Login successful!');\n        _this.email = '';\n        _this.password = '';\n      } catch (error) {\n        alert('Login failed: ' + error.message);\n      }\n    })();\n  }\n}\n_LoginPage = LoginPage;\n_LoginPage.ɵfac = function LoginPage_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || _LoginPage)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\n_LoginPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _LoginPage,\n  selectors: [[\"app-login\"]],\n  decls: 19,\n  vars: 2,\n  consts: [[\"size\", \"12\"], [3, \"ngSubmit\"], [\"position\", \"floating\"], [\"type\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"expand\", \"block\", \"type\", \"submit\"]],\n  template: function LoginPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"Login\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\")(5, \"ion-grid\")(6, \"ion-row\")(7, \"ion-col\", 0)(8, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginPage_Template_form_ngSubmit_8_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(9, \"ion-item\")(10, \"ion-label\", 2);\n      i0.ɵɵtext(11, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"ion-input\", 3);\n      i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginPage_Template_ion_input_ngModelChange_12_listener($event) {\n        i0.ɵɵtwoWayBindingSet(ctx.email, $event) || (ctx.email = $event);\n        return $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"ion-item\")(14, \"ion-label\", 2);\n      i0.ɵɵtext(15, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"ion-input\", 4);\n      i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginPage_Template_ion_input_ngModelChange_16_listener($event) {\n        i0.ɵɵtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n        return $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"ion-button\", 5);\n      i0.ɵɵtext(18, \"Login\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵtwoWayProperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtwoWayProperty(\"ngModel\", ctx.password);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm, i3.IonButton, i3.IonCol, i3.IonContent, i3.IonGrid, i3.IonHeader, i3.IonInput, i3.IonItem, i3.IonLabel, i3.IonRow, i3.IonTitle, i3.IonToolbar, i3.TextValueAccessor],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["LoginPage","constructor","authService","email","password","onSubmit","_this","_asyncToGenerator","alert","signIn","error","message","i0","ɵɵdirectiveInject","i1","AuthService","selectors","decls","vars","consts","template","LoginPage_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginPage_Template_form_ngSubmit_8_listener","ɵɵtwoWayListener","LoginPage_Template_ion_input_ngModelChange_12_listener","$event","ɵɵtwoWayBindingSet","LoginPage_Template_ion_input_ngModelChange_16_listener","ɵɵadvance","ɵɵtwoWayProperty"],"sources":["C:\\Users\\Omar\\Desktop\\ORION\\orion\\src\\app\\login\\login.page.ts","C:\\Users\\Omar\\Desktop\\ORION\\orion\\src\\app\\login\\login.page.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage {\r\n  email: string = ''; // Inicializamos como cadena vacía\r\n  password: string = '';\r\n\r\n  constructor(public authService: AuthService) {}\r\n\r\n  async onSubmit() {\r\n    if (!this.email || !this.password) {\r\n      alert('Please fill in both fields.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await this.authService.signIn(this.email, this.password);\r\n      alert('Login successful!');\r\n      this.email = '';\r\n      this.password = '';\r\n    } catch (error:any) {\r\n      alert('Login failed: ' + error.message);\r\n    }\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar>\r\n    <ion-title>Login</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <ion-grid>\r\n    <ion-row>\r\n      <ion-col size=\"12\">\r\n        <form (ngSubmit)=\"onSubmit()\">\r\n          <ion-item>\r\n            <ion-label position=\"floating\">Email</ion-label>\r\n            <ion-input type=\"email\" [(ngModel)]=\"email\" name=\"email\" required></ion-input>\r\n          </ion-item>\r\n          <ion-item>\r\n            <ion-label position=\"floating\">Password</ion-label>\r\n            <ion-input type=\"password\" [(ngModel)]=\"password\" name=\"password\" required></ion-input>\r\n          </ion-item>\r\n          <ion-button expand=\"block\" type=\"submit\">Login</ion-button>\r\n        </form>\r\n      </ion-col>\r\n    </ion-row>\r\n  </ion-grid>\r\n</ion-content>\r\n"],"mappings":";;;;;;AAQA,OAAM,MAAOA,SAAS;EAIpBC,YAAmBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAH9B,KAAAC,KAAK,GAAW,EAAE,CAAC,CAAC;IACpB,KAAAC,QAAQ,GAAW,EAAE;EAEyB;EAExCC,QAAQA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACZ,IAAI,CAACD,KAAI,CAACH,KAAK,IAAI,CAACG,KAAI,CAACF,QAAQ,EAAE;QACjCI,KAAK,CAAC,6BAA6B,CAAC;QACpC;MACF;MAEA,IAAI;QACF,MAAMF,KAAI,CAACJ,WAAW,CAACO,MAAM,CAACH,KAAI,CAACH,KAAK,EAAEG,KAAI,CAACF,QAAQ,CAAC;QACxDI,KAAK,CAAC,mBAAmB,CAAC;QAC1BF,KAAI,CAACH,KAAK,GAAG,EAAE;QACfG,KAAI,CAACF,QAAQ,GAAG,EAAE;MACpB,CAAC,CAAC,OAAOM,KAAS,EAAE;QAClBF,KAAK,CAAC,gBAAgB,GAAGE,KAAK,CAACC,OAAO,CAAC;MACzC;IAAC;EACH;;aApBWX,SAAS;;mCAATA,UAAS,EAAAY,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;;QAATf,UAAS;EAAAgB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,mBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCNlBV,EAFJ,CAAAY,cAAA,iBAAY,kBACG,gBACA;MAAAZ,EAAA,CAAAa,MAAA,YAAK;MAEpBb,EAFoB,CAAAc,YAAA,EAAY,EAChB,EACH;MAMLd,EAJR,CAAAY,cAAA,kBAAa,eACD,cACC,iBACY,cACa;MAAxBZ,EAAA,CAAAe,UAAA,sBAAAC,4CAAA;QAAA,OAAYL,GAAA,CAAAlB,QAAA,EAAU;MAAA,EAAC;MAEzBO,EADF,CAAAY,cAAA,eAAU,oBACuB;MAAAZ,EAAA,CAAAa,MAAA,aAAK;MAAAb,EAAA,CAAAc,YAAA,EAAY;MAChDd,EAAA,CAAAY,cAAA,oBAAkE;MAA1CZ,EAAA,CAAAiB,gBAAA,2BAAAC,uDAAAC,MAAA;QAAAnB,EAAA,CAAAoB,kBAAA,CAAAT,GAAA,CAAApB,KAAA,EAAA4B,MAAA,MAAAR,GAAA,CAAApB,KAAA,GAAA4B,MAAA;QAAA,OAAAA,MAAA;MAAA,EAAmB;MAC7CnB,EADoE,CAAAc,YAAA,EAAY,EACrE;MAETd,EADF,CAAAY,cAAA,gBAAU,oBACuB;MAAAZ,EAAA,CAAAa,MAAA,gBAAQ;MAAAb,EAAA,CAAAc,YAAA,EAAY;MACnDd,EAAA,CAAAY,cAAA,oBAA2E;MAAhDZ,EAAA,CAAAiB,gBAAA,2BAAAI,uDAAAF,MAAA;QAAAnB,EAAA,CAAAoB,kBAAA,CAAAT,GAAA,CAAAnB,QAAA,EAAA2B,MAAA,MAAAR,GAAA,CAAAnB,QAAA,GAAA2B,MAAA;QAAA,OAAAA,MAAA;MAAA,EAAsB;MACnDnB,EAD6E,CAAAc,YAAA,EAAY,EAC9E;MACXd,EAAA,CAAAY,cAAA,qBAAyC;MAAAZ,EAAA,CAAAa,MAAA,aAAK;MAKxDb,EALwD,CAAAc,YAAA,EAAa,EACtD,EACC,EACF,EACD,EACC;;;MAXsBd,EAAA,CAAAsB,SAAA,IAAmB;MAAnBtB,EAAA,CAAAuB,gBAAA,YAAAZ,GAAA,CAAApB,KAAA,CAAmB;MAIhBS,EAAA,CAAAsB,SAAA,GAAsB;MAAtBtB,EAAA,CAAAuB,gBAAA,YAAAZ,GAAA,CAAAnB,QAAA,CAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}